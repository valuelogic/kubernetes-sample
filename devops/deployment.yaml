apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: k8s-java-sample
spec:
  revisionHistoryLimit: 1
  replicas: 2

  template:
    metadata:
      labels:
        app: k8s-java-sample
        annotations:
          pod.beta.kubernetes.io/init-containers: '[
              {
                  "name": "setup",
                  "image": "busybox",
                  "imagePullPolicy": "IfNotPresent",
                  "command": ["sh", "-c", "echo \"{\\\"endpoint\\\": \\\"http://$POD_IP:8080/metrics\\\"}\" > /etc/custom-metrics/definition.json"],
                  "env": [{
                    "name": "POD_IP",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "status.podIP"
                      }
                    }
                  }],
                  "volumeMounts": [
                      {
                          "name": "metrics",
                          "mountPath": "/etc/custom-metrics"
                      }
                  ]
              }
          ]'
    spec:
      containers:
      - name: k8s-java-sample
        image: mwrona/k8s-java-sample:0.1.0.2
        imagePullPolicy: Always
        env:
          - name: CONFIG
            valueFrom:
              fieldRef:
                fieldPath: "metadata.namespace"
          - name: "JAVA_OPTS"
            value: "-Xmx256m"
        #- name: SPRING_PROFILES_ACTIVE
        #  value: prod
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: postgres-secrets
          readOnly: true
          mountPath: "/etc/secrets/postgres-secrets"
        - name: metrics
          mountPath: "/etc/custom-metrics"
        resources:
            requests:
              cpu: 500m
              memory: 256Mi
            limits:
              cpu: 700m
              memory: 512Mi
        livenessProbe:
          httpGet:
            path: /probe/health
            port: 8080
            #httpHeaders:
            #  - name: X-Custom-Header
            #    value: Awesome
          initialDelaySeconds: 30
          timeoutSeconds: 1
          periodSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        readinessProbe:
          httpGet:
            path: /probe/ready
            port: 8080
            #httpHeaders:
            #  - name: X-Custom-Header
            #    value: Awesome
          initialDelaySeconds: 30
          timeoutSeconds: 5
          periodSeconds: 5
          failureThreshold: 3
          successThreshold: 1
      volumes:
        - name: postgres-secrets
          secret:
            secretName: "postgres-secrets"
        - name: metrics
          emptyDir: